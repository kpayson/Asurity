{"version":3,"sources":["loan-format.ts","loan-table.tsx","rate-spread-filter.tsx","loan-list.tsx","loan-detail.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["amortizationTypeLookup","agencyCodeLookup","1","2","3","5","7","9","loanPurposeLookup","loanTypeLookup","4","actionTakenTypeLookup","8","formatLoan","loan","amortizationType","agencyCode","loanPurpose","loanType","actionTakenType","_LoanTable","props","callApi","a","match","fetch","response","json","body","status","Error","message","viewMoreClick","loanId","history","push","state","loans","this","then","res","formattedLoans","map","setState","catch","err","console","log","columns","Header","accessor","Cell","p","data-id","value","onClick","row","style","textAlign","minRateSpread","maxRateSpread","filteredLoans","filter","x","rateSpread","getTrProps","rowInfo","column","background","data","className","Component","LoanTable","withRouter","RateSpreadFilter","minRateSpreadChange","e","min","target","maxRateSpreadChange","max","rateSpreadFilter","onFilter","type","onChange","React","LoanList","onRateSpreadFilter","undefined","LoanDetail","params","id","formattedLoan","applDate","loanAmount","loanTerm","lockInDate","apr","reverseMortgage","latitude","longitude","l","to","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de58cf62.chunk.js","sourcesContent":["\r\ninterface LoanData {\r\n    loanId: string;\r\n    agencyCode: number;\r\n    applDate: string;\r\n    loanPurpose: number;\r\n    loanType: number;\r\n    loanAmount: number;\r\n    loanTerm: number;\r\n    actionTakenType: number;\r\n    lockInDate: string;\r\n    amortizationType: number;\r\n    apr: number;\r\n    reverseMortgage: number;\r\n    latitude: number;\r\n    longitude: number;\r\n    rateSpread: number\r\n    };\r\n\r\nconst amortizationTypeLookup: { [code: string]: string } = {\r\n    'VariableRate': 'Variable Rate',\r\n    'FixedRate':'Fixed Rate'\r\n};\r\n\r\nconst agencyCodeLookup: { [code: number]: string } = {\r\n    1: 'Comptroller of the Currency (OCC)',\r\n    2: 'Federal Reserve System (FRS)',\r\n    3: 'Federal Deposit Insurance Corporation (FDIC)',\r\n    5: 'National Credit Union A',\r\n    7: 'United States Department of Housing and Urban Development (HUD)',\r\n    9: 'Consumer Financial Protection Bureau (CFPB)'\r\n};\r\n\r\nconst loanPurposeLookup:  { [code: number]: string } = {\r\n    1: 'Home purchase',\r\n    2: 'Home improvement',\r\n    3: 'Refinancing'\r\n};\r\n\r\nconst loanTypeLookup:  { [code: number]: string } = {\r\n    1: 'Conventional (any loan other than FHA VA FSA or RHS loans)',\r\n    2: 'FHA-insured (Federal Housing Administration)',\r\n    3: 'VA-guaranteed (Veterans Administration)',\r\n    4: 'FSA/RHS-guaranteed (Farm Service Agency or Rural Housing Service)'\r\n};\r\n\r\nconst actionTakenTypeLookup:  { [code: number]: string } = {\r\n    1: 'Loan originated',\r\n    2: 'Application approved but not accepted',\r\n    8: 'Preapproval request approved but not accepted (optional reporting)'\r\n};\r\n\r\nexport const formatLoan = (loan:LoanData) => {\r\n    const f = {...loan,\r\n        amortizationType: amortizationTypeLookup[loan.amortizationType],\r\n        agencyCode: agencyCodeLookup[loan.agencyCode],\r\n        loanPurpose: loanPurposeLookup[loan.loanPurpose],\r\n        loanType: loanTypeLookup[loan.loanType],\r\n        actionTakenType: actionTakenTypeLookup[loan.actionTakenType]   \r\n    \r\n    };\r\n    return f;\r\n}","import React, { Component } from 'react';\r\nimport ReactTable from 'react-table';\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\nimport \"react-table/react-table.css\";\r\nimport { formatLoan } from \"./loan-format\";\r\nimport './index.css';\r\n\r\n\r\n// Type whatever you expect in 'this.props.match.params.*'\r\ntype PathParamsType = {\r\n    id: string,\r\n}\r\n\r\n// Your component own properties\r\ntype LoanTableProps = RouteComponentProps<PathParamsType> & {\r\n    minRateSpread?: number;\r\n    maxRateSpread?: number;\r\n};\r\n\r\ntype LoanTableState = {\r\n    loans: any[];\r\n    minRateSpread?: number;\r\n    maxRateSpread?: number;\r\n}\r\n\r\nexport class _LoanTable extends Component<LoanTableProps, LoanTableState>  {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            loans: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.callApi()\r\n            .then(res => {\r\n                const formattedLoans = res.map(formatLoan);\r\n                this.setState({ loans: formattedLoans })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    callApi = async () => {\r\n        const { match } = this.props;\r\n        const response = await fetch(`/api/loans/`);\r\n        const body = await response.json();\r\n        if (response.status !== 200) throw Error(body.message);\r\n\r\n        return body;\r\n    };\r\n\r\n    viewMoreClick = (loanId: string) => {\r\n        this.props.history.push(`/loan/${loanId}`)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const alignLeft = (row: any) => <div style={{ textAlign: \"left\" }}>{row.value}</div>;\r\n\r\n        const columns = [\r\n            {\r\n                Header: '',\r\n                accessor: 'loanId',\r\n                Cell: (p: any) => <button data-id={p.value} onClick={() => this.viewMoreClick(p.value)} value={\"View More\"}>View More</button>\r\n            },\r\n            {\r\n                Header: 'Loan Term',\r\n                accessor: 'loanTerm'\r\n            }, {\r\n                Header: 'Action Taken Type',\r\n                accessor: 'actionTakenType',\r\n                Cell: alignLeft\r\n\r\n            }, {\r\n                Header: 'Lock In Date',\r\n                accessor: 'lockInDate',\r\n            },\r\n            {\r\n                Header: 'Amortization Type',\r\n                accessor: 'amortizationType',\r\n            },\r\n            {\r\n                Header: 'APR',\r\n                accessor: 'apr',\r\n            },\r\n            {\r\n                Header: 'Reverse Mortgage',\r\n                accessor: 'reverseMortgage',\r\n            },\r\n            {\r\n                Header: 'Rate Spread',\r\n                accessor: 'rateSpread',\r\n            }\r\n        ]\r\n\r\n        const { minRateSpread, maxRateSpread } = this.props;\r\n        const loans = this.state.loans;\r\n        const filteredLoans = loans.filter(x => (!minRateSpread || x.rateSpread >= minRateSpread) && (!maxRateSpread || x.rateSpread <= maxRateSpread))\r\n        return <div>\r\n\r\n            <ReactTable\r\n                getTrProps={(state: any, rowInfo: any, column: any) => {\r\n\r\n                    return rowInfo && rowInfo.row.rateSpread > 1.5 ? {\r\n                        style: {\r\n                            background: 'pink'\r\n                        }\r\n                    } : {};\r\n                }}\r\n\r\n                // getTdProps={(state: any, rowInfo: any, column: any, instance: any) => {\r\n                //     return {\r\n                //         onClick: (e: any, handleOriginal: any) => {\r\n                //             // console.log('A Td Element was clicked!')\r\n                //             // console.log('it produced this event:', e)\r\n                //             // console.log('It was in this column:', column)\r\n                //             // console.log('It was in this row:', rowInfo)\r\n                //             // console.log('It was in this table instance:', instance)\r\n\r\n                //             this.props.history.push(`/loan/${rowInfo.original.loanId}`)\r\n\r\n                //             if (handleOriginal) {\r\n                //                 handleOriginal()\r\n                //             }\r\n                //         }\r\n                //     }\r\n                // }}\r\n\r\n                data={filteredLoans}\r\n                columns={columns}\r\n                className=\"-striped -highlight\"\r\n\r\n\r\n            />\r\n        </div>\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const LoanTable = withRouter(_LoanTable)\r\n","import React from 'react';\r\nimport \"./index.css\";\r\n\r\n\r\ninterface RateSpreadFilterProps {\r\n    onFilter: (min?:number,max?:number) => void;\r\n}\r\n\r\ninterface RateSpreadFilterState {\r\n    min?:number;\r\n    max?:number;\r\n}\r\n\r\nexport class RateSpreadFilter extends React.Component<RateSpreadFilterProps,RateSpreadFilterState> {\r\n\r\n    minRateSpreadChange = (e:any) => {\r\n        this.setState({min:e.target.value});\r\n    }\r\n\r\n    maxRateSpreadChange = (e:any) => {\r\n        this.setState({max:e.target.value});\r\n    }\r\n\r\n    rateSpreadFilter = (e:any) => {\r\n        this.props.onFilter(this.state.min,this.state.max);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rate-spread-filter\">\r\n                <label>Rate Spread</label>\r\n                <label>Min</label><input type=\"text\" onChange={this.minRateSpreadChange}></input>\r\n                <label>Max</label><input type=\"text\" onChange={this.maxRateSpreadChange}></input>\r\n                <button onClick={this.rateSpreadFilter}>Filter</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {LoanTable} from './loan-table';\r\nimport {RateSpreadFilter} from './rate-spread-filter';\r\n\r\ninterface LoanListState {\r\n    minRateSpread?:number;\r\n    maxRateSpread?:number;\r\n}\r\n\r\nexport class LoanList extends React.Component<any,LoanListState> {\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            minRateSpread:undefined,\r\n            maxRateSpread:undefined\r\n        };\r\n    }\r\n\r\n    onRateSpreadFilter = (min?:number,max?:number) => {\r\n        this.setState({\r\n            minRateSpread:min,\r\n            maxRateSpread:max\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <RateSpreadFilter onFilter={this.onRateSpreadFilter}></RateSpreadFilter>\r\n                <LoanTable minRateSpread={this.state.minRateSpread} maxRateSpread={this.state.maxRateSpread}></LoanTable>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { formatLoan } from \"./loan-format\";\r\nimport \"./index.css\";\r\n\r\n// interface LoanDetailRecord {\r\n//     loanId:string;\r\n//     agencyCode:string;\r\n//     applDate:string;\r\n//     loanPurpose:string;\r\n//     loanType:string;\r\n//     loanAmount:string;\r\n//     loanTerm:string;\r\n//     actionTakenType:string;\r\n//     lockInDate:string;\r\n//     amortizationType:string;\r\n//     apr:string;\r\n//     reverseMortgage:string;\r\n//     latitude:string;\r\n//     longitude:string;\r\n//     rateSpread:string;\r\n// }\r\n\r\ninterface LoanDetailState {\r\n    loan: any;\r\n}\r\nexport class LoanDetail extends Component<any, LoanDetailState>  {\r\n    constructor(props: any) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            loan: {\r\n                loanId:\"\",\r\n                agencyCode:\"\",\r\n                applDate:\"\",\r\n                loanPurpose:\"\",\r\n                loanType:\"\",\r\n                loanAmount:\"\",\r\n                loanTerm:\"\",\r\n                actionTakenType:\"\",\r\n                lockInDate:\"\",\r\n                amortizationType:\"\",\r\n                apr:\"\",\r\n                reverseMortgage:\"\",\r\n                latitude:\"\",\r\n                longitude:\"\",\r\n                rateSpread:\"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.callApi()\r\n            .then(res => this.setState({ loan: res }))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    callApi = async () => {\r\n        const { match } = this.props;\r\n        const response = await fetch(`/api/loan/${match.params.id}`);\r\n        const body = await response.json();\r\n\r\n        if (response.status !== 200) throw Error(body.message);\r\n        const formattedLoan = formatLoan(body);\r\n        return formattedLoan;\r\n    };\r\n\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n        const l = this.state.loan;\r\n        return (\r\n            <div className=\"loan-detail\">\r\n                <h2>Loan Detail</h2>\r\n\r\n                <Link to=\"/\">Loans</Link>\r\n\r\n                <div className=\"row\">\r\n                    <label>Loan Id:</label>\r\n                    <div>{l.loanId}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>Agency Code:</label>\r\n                    <div>{l.agencyCode}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>Application Date:</label>\r\n                    <div>{l.applDate}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>Loan Purpose:</label>\r\n                    <div>{l.loanPurpose}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>Loan Type:</label>\r\n                    <div>{l.loanType}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>Loan Amount:</label>\r\n                    <div>{l.loanAmount}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>Loan Term:</label>\r\n                    <div>{l.loanTerm}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>Action Taken:</label>\r\n                    <div>{l.actionTakenType}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>Lock In Date:</label>\r\n                    <div>{l.lockInDate}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>Amortization Type:</label>\r\n                    <div>{l.amortizationType}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>APR:</label>\r\n                    <div>{l.apr}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>Reverse Mortgage:</label>\r\n                    <div>{l.reverseMortgage}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>Latitiude:</label>\r\n                    <div>{l.latitude}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>Longitude:</label>\r\n                    <div>{l.longitude}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>Rate Spread:</label>\r\n                    <div>{l.rateSpread}</div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport {LoanList} from './loan-list'\nimport {LoanDetail} from './loan-detail';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n\n    <div className=\"App\">\n       <header>\n        <h2>Ken Payson Asurity</h2> \n      </header>\n\n\n      <Route exact path=\"/\" component={LoanList} />\n      <Route exact path=\"/loan/:id\" component={LoanDetail} />\n\n    </div>\n  </Router>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}